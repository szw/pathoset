#!/bin/bash
IFS=$'\n'
bundle='bundle'
autoload='autoload'

function get_pathogen {
    if [ ! -d "$autoload" ]; then
        mkdir $autoload
    fi
    cd $autoload
    curl -so pathogen.vim https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim
    cd ..
}

function do_xmledit_postinstall {
    if [ -d "$bundle/xmledit/ftplugin" ]; then
        cd $bundle/xmledit/ftplugin
        ln -s xml.vim eruby.vim 2>/dev/null
        ln -s xml.vim html.vim 2>/dev/null
        ln -s xml.vim xhtml.vim 2>/dev/null
        cd ../../..
    fi
}

function do_install {
    if [ ! -d "$bundle" ]; then
        mkdir $bundle
    fi
    cd $bundle
    git clone https://github.com/Raimondi/delimitMate.git 2>/dev/null
    git clone https://github.com/jgdavey/vim-blockle.git 2>/dev/null
    git clone https://github.com/kana/vim-textobj-entire.git 2>/dev/null
    git clone https://github.com/kana/vim-textobj-line.git 2>/dev/null
    git clone https://github.com/kana/vim-textobj-user.git 2>/dev/null
    git clone https://github.com/kchmck/vim-coffee-script.git 2>/dev/null
    git clone https://github.com/kien/ctrlp.vim.git 2>/dev/null
    git clone https://github.com/lambdalisue/vim-django-support.git 2>/dev/null
    git clone https://github.com/majutsushi/tagbar.git 2>/dev/null
    git clone https://github.com/mileszs/ack.vim.git 2>/dev/null
    git clone https://github.com/msanders/snipmate.vim.git 2>/dev/null
    git clone https://github.com/nelstrom/vim-textobj-rubyblock.git 2>/dev/null
    git clone https://github.com/pangloss/vim-javascript.git 2>/dev/null
    git clone https://github.com/scrooloose/nerdtree.git 2>/dev/null
    git clone https://github.com/scrooloose/syntastic.git 2>/dev/null
    git clone https://github.com/shawncplus/phpcomplete.vim.git 2>/dev/null
    git clone https://github.com/sukima/xmledit.git 2>/dev/null
    git clone https://github.com/szw/moloterm.git 2>/dev/null
    git clone https://github.com/szw/rope-vim.git 2>/dev/null
    git clone https://github.com/szw/vim-dict.git 2>/dev/null
    git clone https://github.com/szw/vim-g.git 2>/dev/null
    git clone https://github.com/szw/vim-maximizer.git 2>/dev/null
    git clone https://github.com/szw/vim-powerline.git 2>/dev/null
    git clone https://github.com/szw/vim-tags.git 2>/dev/null
    git clone https://github.com/tpope/vim-abolish.git 2>/dev/null
    git clone https://github.com/tpope/vim-commentary.git 2>/dev/null
    git clone https://github.com/tpope/vim-endwise.git 2>/dev/null
    git clone https://github.com/tpope/vim-fugitive.git 2>/dev/null
    git clone https://github.com/tpope/vim-haml.git 2>/dev/null
    git clone https://github.com/tpope/vim-markdown.git 2>/dev/null
    git clone https://github.com/tpope/vim-rails.git 2>/dev/null
    git clone https://github.com/tpope/vim-repeat.git 2>/dev/null
    git clone https://github.com/tpope/vim-surround.git 2>/dev/null
    git clone https://github.com/vim-ruby/vim-ruby.git 2>/dev/null
    git clone https://github.com/vim-scripts/Tabmerge.git 2>/dev/null
    git clone https://github.com/vim-scripts/indentpython.vim.git 2>/dev/null
    cd ..

    do_xmledit_postinstall
}

function usage {
	echo "usage: $0 [update|install|help]"
}

function do_update {
	for dir in `ls "$bundle/"`
	do
		if [ -d "$bundle/$dir" ]; then
			cd $bundle/$dir
			git pull
			cd ../..
		fi
	done
}

echo 'PATHOSET v. 0.1'
echo 'Copyright (c) 2013 Szymon Wrozynski and Contributors'
echo

if [ -z "$1" ]; then
    echo "Trying to install new plugins and update..."
    echo
    get_pathogen
    do_install
    do_update
elif [ "$1" = "update" ]; then
    echo "Trying to update..."
    echo
    get_pathogen
    do_update
elif [ "$1" = "install" ]; then
    echo "Trying to install new plugins..."
    echo
    get_pathogen
    do_install
else
	usage
fi

